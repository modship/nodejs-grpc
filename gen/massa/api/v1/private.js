"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrivateService = exports.UnbanNodesByIpsResponse = exports.UnbanNodesByIpsRequest = exports.UnbanNodesByIdsResponse = exports.UnbanNodesByIdsRequest = exports.ShutdownGracefullyResponse = exports.ShutdownGracefullyRequest = exports.SignMessagesResponse = exports.SignMessagesRequest = exports.RemoveStakingAddressesResponse = exports.RemoveStakingAddressesRequest = exports.RemoveFromPeersWhitelistResponse = exports.RemoveFromPeersWhitelistRequest = exports.RemoveFromBootstrapWhitelistResponse = exports.RemoveFromBootstrapWhitelistRequest = exports.RemoveFromBootstrapBlacklistResponse = exports.RemoveFromBootstrapBlacklistRequest = exports.BanNodesByIpsResponse = exports.BanNodesByIpsRequest = exports.BanNodesByIdsResponse = exports.BanNodesByIdsRequest = exports.GetPeersWhitelistResponse = exports.GetPeersWhitelistRequest = exports.GetNodeStatusResponse = exports.GetNodeStatusRequest = exports.GetMipStatusResponse = exports.GetMipStatusRequest = exports.GetBootstrapWhitelistResponse = exports.GetBootstrapWhitelistRequest = exports.GetBootstrapBlacklistResponse = exports.GetBootstrapBlacklistRequest = exports.AllowEveryoneToBootstrapResponse = exports.AllowEveryoneToBootstrapRequest = exports.AddStakingSecretKeysResponse = exports.AddStakingSecretKeysRequest = exports.AddToPeersWhitelistResponse = exports.AddToPeersWhitelistRequest = exports.AddToBootstrapWhitelistResponse = exports.AddToBootstrapWhitelistRequest = exports.AddToBootstrapBlacklistResponse = exports.AddToBootstrapBlacklistRequest = void 0;
// @generated by protobuf-ts 2.9.1
// @generated from protobuf file "massa/api/v1/private.proto" (package "massa.api.v1", syntax proto3)
// tslint:disable
//
// Copyright (c) 2023 MASSA LABS <info@massa.net>
//
const runtime_rpc_1 = require("@protobuf-ts/runtime-rpc");
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const node_1 = require("../../model/v1/node");
const versioning_1 = require("../../model/v1/versioning");
// @generated message type with reflection information, may provide speed optimized methods
class AddToBootstrapBlacklistRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.AddToBootstrapBlacklistRequest", [
            { no: 1, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { ips: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ips */ 1:
                    message.ips.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string ips = 1; */
        for (let i = 0; i < message.ips.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.ips[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.AddToBootstrapBlacklistRequest
 */
exports.AddToBootstrapBlacklistRequest = new AddToBootstrapBlacklistRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddToBootstrapBlacklistResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.AddToBootstrapBlacklistResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.AddToBootstrapBlacklistResponse
 */
exports.AddToBootstrapBlacklistResponse = new AddToBootstrapBlacklistResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddToBootstrapWhitelistRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.AddToBootstrapWhitelistRequest", [
            { no: 1, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { ips: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ips */ 1:
                    message.ips.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string ips = 1; */
        for (let i = 0; i < message.ips.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.ips[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.AddToBootstrapWhitelistRequest
 */
exports.AddToBootstrapWhitelistRequest = new AddToBootstrapWhitelistRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddToBootstrapWhitelistResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.AddToBootstrapWhitelistResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.AddToBootstrapWhitelistResponse
 */
exports.AddToBootstrapWhitelistResponse = new AddToBootstrapWhitelistResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddToPeersWhitelistRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.AddToPeersWhitelistRequest", [
            { no: 1, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { ips: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ips */ 1:
                    message.ips.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string ips = 1; */
        for (let i = 0; i < message.ips.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.ips[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.AddToPeersWhitelistRequest
 */
exports.AddToPeersWhitelistRequest = new AddToPeersWhitelistRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddToPeersWhitelistResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.AddToPeersWhitelistResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.AddToPeersWhitelistResponse
 */
exports.AddToPeersWhitelistResponse = new AddToPeersWhitelistResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddStakingSecretKeysRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.AddStakingSecretKeysRequest", [
            { no: 1, name: "secret_keys", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { secretKeys: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string secret_keys */ 1:
                    message.secretKeys.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string secret_keys = 1; */
        for (let i = 0; i < message.secretKeys.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.secretKeys[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.AddStakingSecretKeysRequest
 */
exports.AddStakingSecretKeysRequest = new AddStakingSecretKeysRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddStakingSecretKeysResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.AddStakingSecretKeysResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.AddStakingSecretKeysResponse
 */
exports.AddStakingSecretKeysResponse = new AddStakingSecretKeysResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AllowEveryoneToBootstrapRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.AllowEveryoneToBootstrapRequest", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.AllowEveryoneToBootstrapRequest
 */
exports.AllowEveryoneToBootstrapRequest = new AllowEveryoneToBootstrapRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AllowEveryoneToBootstrapResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.AllowEveryoneToBootstrapResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.AllowEveryoneToBootstrapResponse
 */
exports.AllowEveryoneToBootstrapResponse = new AllowEveryoneToBootstrapResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBootstrapBlacklistRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.GetBootstrapBlacklistRequest", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.GetBootstrapBlacklistRequest
 */
exports.GetBootstrapBlacklistRequest = new GetBootstrapBlacklistRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBootstrapBlacklistResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.GetBootstrapBlacklistResponse", [
            { no: 1, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { ips: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ips */ 1:
                    message.ips.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string ips = 1; */
        for (let i = 0; i < message.ips.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.ips[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.GetBootstrapBlacklistResponse
 */
exports.GetBootstrapBlacklistResponse = new GetBootstrapBlacklistResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBootstrapWhitelistRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.GetBootstrapWhitelistRequest", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.GetBootstrapWhitelistRequest
 */
exports.GetBootstrapWhitelistRequest = new GetBootstrapWhitelistRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBootstrapWhitelistResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.GetBootstrapWhitelistResponse", [
            { no: 1, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { ips: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ips */ 1:
                    message.ips.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string ips = 1; */
        for (let i = 0; i < message.ips.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.ips[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.GetBootstrapWhitelistResponse
 */
exports.GetBootstrapWhitelistResponse = new GetBootstrapWhitelistResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetMipStatusRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.GetMipStatusRequest", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.GetMipStatusRequest
 */
exports.GetMipStatusRequest = new GetMipStatusRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetMipStatusResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.GetMipStatusResponse", [
            { no: 1, name: "mipstatus_entries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => versioning_1.MipStatusEntry }
        ]);
    }
    create(value) {
        const message = { mipstatusEntries: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated massa.model.v1.MipStatusEntry mipstatus_entries */ 1:
                    message.mipstatusEntries.push(versioning_1.MipStatusEntry.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated massa.model.v1.MipStatusEntry mipstatus_entries = 1; */
        for (let i = 0; i < message.mipstatusEntries.length; i++)
            versioning_1.MipStatusEntry.internalBinaryWrite(message.mipstatusEntries[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.GetMipStatusResponse
 */
exports.GetMipStatusResponse = new GetMipStatusResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetNodeStatusRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.GetNodeStatusRequest", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.GetNodeStatusRequest
 */
exports.GetNodeStatusRequest = new GetNodeStatusRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetNodeStatusResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.GetNodeStatusResponse", [
            { no: 1, name: "status", kind: "message", T: () => node_1.NodeStatus }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* massa.model.v1.NodeStatus status */ 1:
                    message.status = node_1.NodeStatus.internalBinaryRead(reader, reader.uint32(), options, message.status);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* massa.model.v1.NodeStatus status = 1; */
        if (message.status)
            node_1.NodeStatus.internalBinaryWrite(message.status, writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.GetNodeStatusResponse
 */
exports.GetNodeStatusResponse = new GetNodeStatusResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPeersWhitelistRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.GetPeersWhitelistRequest", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.GetPeersWhitelistRequest
 */
exports.GetPeersWhitelistRequest = new GetPeersWhitelistRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPeersWhitelistResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.GetPeersWhitelistResponse", [
            { no: 1, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { ips: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ips */ 1:
                    message.ips.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string ips = 1; */
        for (let i = 0; i < message.ips.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.ips[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.GetPeersWhitelistResponse
 */
exports.GetPeersWhitelistResponse = new GetPeersWhitelistResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BanNodesByIdsRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.BanNodesByIdsRequest", [
            { no: 1, name: "node_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { nodeIds: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string node_ids */ 1:
                    message.nodeIds.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string node_ids = 1; */
        for (let i = 0; i < message.nodeIds.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.nodeIds[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.BanNodesByIdsRequest
 */
exports.BanNodesByIdsRequest = new BanNodesByIdsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BanNodesByIdsResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.BanNodesByIdsResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.BanNodesByIdsResponse
 */
exports.BanNodesByIdsResponse = new BanNodesByIdsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BanNodesByIpsRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.BanNodesByIpsRequest", [
            { no: 1, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { ips: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ips */ 1:
                    message.ips.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string ips = 1; */
        for (let i = 0; i < message.ips.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.ips[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.BanNodesByIpsRequest
 */
exports.BanNodesByIpsRequest = new BanNodesByIpsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BanNodesByIpsResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.BanNodesByIpsResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.BanNodesByIpsResponse
 */
exports.BanNodesByIpsResponse = new BanNodesByIpsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveFromBootstrapBlacklistRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.RemoveFromBootstrapBlacklistRequest", [
            { no: 1, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { ips: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ips */ 1:
                    message.ips.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string ips = 1; */
        for (let i = 0; i < message.ips.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.ips[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.RemoveFromBootstrapBlacklistRequest
 */
exports.RemoveFromBootstrapBlacklistRequest = new RemoveFromBootstrapBlacklistRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveFromBootstrapBlacklistResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.RemoveFromBootstrapBlacklistResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.RemoveFromBootstrapBlacklistResponse
 */
exports.RemoveFromBootstrapBlacklistResponse = new RemoveFromBootstrapBlacklistResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveFromBootstrapWhitelistRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.RemoveFromBootstrapWhitelistRequest", [
            { no: 1, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { ips: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ips */ 1:
                    message.ips.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string ips = 1; */
        for (let i = 0; i < message.ips.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.ips[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.RemoveFromBootstrapWhitelistRequest
 */
exports.RemoveFromBootstrapWhitelistRequest = new RemoveFromBootstrapWhitelistRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveFromBootstrapWhitelistResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.RemoveFromBootstrapWhitelistResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.RemoveFromBootstrapWhitelistResponse
 */
exports.RemoveFromBootstrapWhitelistResponse = new RemoveFromBootstrapWhitelistResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveFromPeersWhitelistRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.RemoveFromPeersWhitelistRequest", [
            { no: 1, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { ips: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ips */ 1:
                    message.ips.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string ips = 1; */
        for (let i = 0; i < message.ips.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.ips[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.RemoveFromPeersWhitelistRequest
 */
exports.RemoveFromPeersWhitelistRequest = new RemoveFromPeersWhitelistRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveFromPeersWhitelistResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.RemoveFromPeersWhitelistResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.RemoveFromPeersWhitelistResponse
 */
exports.RemoveFromPeersWhitelistResponse = new RemoveFromPeersWhitelistResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveStakingAddressesRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.RemoveStakingAddressesRequest", [
            { no: 1, name: "addresses", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { addresses: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string addresses */ 1:
                    message.addresses.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string addresses = 1; */
        for (let i = 0; i < message.addresses.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.addresses[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.RemoveStakingAddressesRequest
 */
exports.RemoveStakingAddressesRequest = new RemoveStakingAddressesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveStakingAddressesResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.RemoveStakingAddressesResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.RemoveStakingAddressesResponse
 */
exports.RemoveStakingAddressesResponse = new RemoveStakingAddressesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SignMessagesRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.SignMessagesRequest", [
            { no: 1, name: "messages", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value) {
        const message = { messages: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bytes messages */ 1:
                    message.messages.push(reader.bytes());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bytes messages = 1; */
        for (let i = 0; i < message.messages.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).bytes(message.messages[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.SignMessagesRequest
 */
exports.SignMessagesRequest = new SignMessagesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SignMessagesResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.SignMessagesResponse", [
            { no: 1, name: "public_key", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "signatures", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { publicKey: "", signatures: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string public_key */ 1:
                    message.publicKey = reader.string();
                    break;
                case /* repeated string signatures */ 3:
                    message.signatures.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string public_key = 1; */
        if (message.publicKey !== "")
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.publicKey);
        /* repeated string signatures = 3; */
        for (let i = 0; i < message.signatures.length; i++)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.signatures[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.SignMessagesResponse
 */
exports.SignMessagesResponse = new SignMessagesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ShutdownGracefullyRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.ShutdownGracefullyRequest", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.ShutdownGracefullyRequest
 */
exports.ShutdownGracefullyRequest = new ShutdownGracefullyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ShutdownGracefullyResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.ShutdownGracefullyResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.ShutdownGracefullyResponse
 */
exports.ShutdownGracefullyResponse = new ShutdownGracefullyResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnbanNodesByIdsRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.UnbanNodesByIdsRequest", [
            { no: 1, name: "node_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { nodeIds: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string node_ids */ 1:
                    message.nodeIds.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string node_ids = 1; */
        for (let i = 0; i < message.nodeIds.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.nodeIds[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.UnbanNodesByIdsRequest
 */
exports.UnbanNodesByIdsRequest = new UnbanNodesByIdsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnbanNodesByIdsResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.UnbanNodesByIdsResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.UnbanNodesByIdsResponse
 */
exports.UnbanNodesByIdsResponse = new UnbanNodesByIdsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnbanNodesByIpsRequest$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.UnbanNodesByIpsRequest", [
            { no: 1, name: "ips", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { ips: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string ips */ 1:
                    message.ips.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string ips = 1; */
        for (let i = 0; i < message.ips.length; i++)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.ips[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.UnbanNodesByIpsRequest
 */
exports.UnbanNodesByIpsRequest = new UnbanNodesByIpsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnbanNodesByIpsResponse$Type extends runtime_5.MessageType {
    constructor() {
        super("massa.api.v1.UnbanNodesByIpsResponse", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.api.v1.UnbanNodesByIpsResponse
 */
exports.UnbanNodesByIpsResponse = new UnbanNodesByIpsResponse$Type();
/**
 * @generated ServiceType for protobuf service massa.api.v1.PrivateService
 */
exports.PrivateService = new runtime_rpc_1.ServiceType("massa.api.v1.PrivateService", [
    { name: "AddToBootstrapBlacklist", options: { "google.api.http": { post: "/v1/add_to_boostrap_blacklist", body: "*" } }, I: exports.AddToBootstrapBlacklistRequest, O: exports.AddToBootstrapBlacklistResponse },
    { name: "AddToBootstrapWhitelist", options: { "google.api.http": { post: "/v1/add_to_boostrap_whitelist", body: "*" } }, I: exports.AddToBootstrapWhitelistRequest, O: exports.AddToBootstrapWhitelistResponse },
    { name: "AddToPeersWhitelist", options: { "google.api.http": { post: "/v1/add_to_peers_whitelist", body: "*" } }, I: exports.AddToPeersWhitelistRequest, O: exports.AddToPeersWhitelistResponse },
    { name: "AddStakingSecretKeys", options: { "google.api.http": { post: "/v1/add_staking_secret_keys", body: "*" } }, I: exports.AddStakingSecretKeysRequest, O: exports.AddStakingSecretKeysResponse },
    { name: "AllowEveryoneToBootstrap", options: { "google.api.http": { post: "/v1/allow_everyone_to_bootstrap", body: "*" } }, I: exports.AllowEveryoneToBootstrapRequest, O: exports.AllowEveryoneToBootstrapResponse },
    { name: "GetBootstrapBlacklist", options: { "google.api.http": { post: "/v1/get_bootstrap_blacklist", body: "*" } }, I: exports.GetBootstrapBlacklistRequest, O: exports.GetBootstrapBlacklistResponse },
    { name: "GetBootstrapWhitelist", options: { "google.api.http": { post: "/v1/get_bootstrap_whitelist", body: "*" } }, I: exports.GetBootstrapWhitelistRequest, O: exports.GetBootstrapWhitelistResponse },
    { name: "GetMipStatus", options: { "google.api.http": { post: "/v1/get_mip_status", body: "*" } }, I: exports.GetMipStatusRequest, O: exports.GetMipStatusResponse },
    { name: "GetNodeStatus", options: { "google.api.http": { post: "/v1/get_node_status", body: "*" } }, I: exports.GetNodeStatusRequest, O: exports.GetNodeStatusResponse },
    { name: "GetPeersWhitelist", options: { "google.api.http": { post: "/v1/get_peers_whitelist", body: "*" } }, I: exports.GetPeersWhitelistRequest, O: exports.GetPeersWhitelistResponse },
    { name: "BanNodesByIds", options: { "google.api.http": { post: "/v1/ban_nodes_by_ids", body: "*" } }, I: exports.BanNodesByIdsRequest, O: exports.BanNodesByIdsResponse },
    { name: "BanNodesByIps", options: { "google.api.http": { post: "/v1/ban_nodes_by_ips", body: "*" } }, I: exports.BanNodesByIpsRequest, O: exports.BanNodesByIpsResponse },
    { name: "RemoveFromBootstrapBlacklist", options: { "google.api.http": { post: "/v1/remove_from_bootstrap_blacklist", body: "*" } }, I: exports.RemoveFromBootstrapBlacklistRequest, O: exports.RemoveFromBootstrapBlacklistResponse },
    { name: "RemoveFromBootstrapWhitelist", options: { "google.api.http": { post: "/v1/remove_from_bootstrap_whitelist", body: "*" } }, I: exports.RemoveFromBootstrapWhitelistRequest, O: exports.RemoveFromBootstrapWhitelistResponse },
    { name: "RemoveFromPeersWhitelist", options: { "google.api.http": { post: "/v1/remove_from_peers_whitelist", body: "*" } }, I: exports.RemoveFromPeersWhitelistRequest, O: exports.RemoveFromPeersWhitelistResponse },
    { name: "RemoveStakingAddresses", options: { "google.api.http": { post: "/v1/remove_staking_addresses", body: "*" } }, I: exports.RemoveStakingAddressesRequest, O: exports.RemoveStakingAddressesResponse },
    { name: "SignMessages", options: { "google.api.http": { post: "/v1/sign_messages", body: "*" } }, I: exports.SignMessagesRequest, O: exports.SignMessagesResponse },
    { name: "ShutdownGracefully", options: { "google.api.http": { post: "/v1/shutdown_gracefully", body: "*" } }, I: exports.ShutdownGracefullyRequest, O: exports.ShutdownGracefullyResponse },
    { name: "UnbanNodesByIds", options: { "google.api.http": { post: "/v1/unban_nodes_by_ids", body: "*" } }, I: exports.UnbanNodesByIdsRequest, O: exports.UnbanNodesByIdsResponse },
    { name: "UnbanNodesByIps", options: { "google.api.http": { post: "/v1/unban_nodes_by_ips", body: "*" } }, I: exports.UnbanNodesByIpsRequest, O: exports.UnbanNodesByIpsResponse }
]);
