/**
 * @fileoverview gRPC-Web generated client stub for massa.api.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.23.3
// source: massa/api/v1/private.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_api_annotations_pb = require('../../../google/api/annotations_pb.js')

var massa_model_v1_node_pb = require('../../../massa/model/v1/node_pb.js')

var massa_model_v1_versioning_pb = require('../../../massa/model/v1/versioning_pb.js')
const proto = {};
proto.massa = {};
proto.massa.api = {};
proto.massa.api.v1 = require('./private_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.massa.api.v1.PrivateServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.massa.api.v1.PrivateServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.AddToBootstrapBlacklistRequest,
 *   !proto.massa.api.v1.AddToBootstrapBlacklistResponse>}
 */
const methodDescriptor_PrivateService_AddToBootstrapBlacklist = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/AddToBootstrapBlacklist',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.AddToBootstrapBlacklistRequest,
  proto.massa.api.v1.AddToBootstrapBlacklistResponse,
  /**
   * @param {!proto.massa.api.v1.AddToBootstrapBlacklistRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.AddToBootstrapBlacklistResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.AddToBootstrapBlacklistRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.AddToBootstrapBlacklistResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.AddToBootstrapBlacklistResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.addToBootstrapBlacklist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/AddToBootstrapBlacklist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_AddToBootstrapBlacklist,
      callback);
};


/**
 * @param {!proto.massa.api.v1.AddToBootstrapBlacklistRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.AddToBootstrapBlacklistResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.addToBootstrapBlacklist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/AddToBootstrapBlacklist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_AddToBootstrapBlacklist);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.AddToBootstrapWhitelistRequest,
 *   !proto.massa.api.v1.AddToBootstrapWhitelistResponse>}
 */
const methodDescriptor_PrivateService_AddToBootstrapWhitelist = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/AddToBootstrapWhitelist',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.AddToBootstrapWhitelistRequest,
  proto.massa.api.v1.AddToBootstrapWhitelistResponse,
  /**
   * @param {!proto.massa.api.v1.AddToBootstrapWhitelistRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.AddToBootstrapWhitelistResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.AddToBootstrapWhitelistRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.AddToBootstrapWhitelistResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.AddToBootstrapWhitelistResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.addToBootstrapWhitelist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/AddToBootstrapWhitelist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_AddToBootstrapWhitelist,
      callback);
};


/**
 * @param {!proto.massa.api.v1.AddToBootstrapWhitelistRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.AddToBootstrapWhitelistResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.addToBootstrapWhitelist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/AddToBootstrapWhitelist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_AddToBootstrapWhitelist);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.AddToPeersWhitelistRequest,
 *   !proto.massa.api.v1.AddToPeersWhitelistResponse>}
 */
const methodDescriptor_PrivateService_AddToPeersWhitelist = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/AddToPeersWhitelist',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.AddToPeersWhitelistRequest,
  proto.massa.api.v1.AddToPeersWhitelistResponse,
  /**
   * @param {!proto.massa.api.v1.AddToPeersWhitelistRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.AddToPeersWhitelistResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.AddToPeersWhitelistRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.AddToPeersWhitelistResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.AddToPeersWhitelistResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.addToPeersWhitelist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/AddToPeersWhitelist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_AddToPeersWhitelist,
      callback);
};


/**
 * @param {!proto.massa.api.v1.AddToPeersWhitelistRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.AddToPeersWhitelistResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.addToPeersWhitelist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/AddToPeersWhitelist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_AddToPeersWhitelist);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.AddStakingSecretKeysRequest,
 *   !proto.massa.api.v1.AddStakingSecretKeysResponse>}
 */
const methodDescriptor_PrivateService_AddStakingSecretKeys = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/AddStakingSecretKeys',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.AddStakingSecretKeysRequest,
  proto.massa.api.v1.AddStakingSecretKeysResponse,
  /**
   * @param {!proto.massa.api.v1.AddStakingSecretKeysRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.AddStakingSecretKeysResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.AddStakingSecretKeysRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.AddStakingSecretKeysResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.AddStakingSecretKeysResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.addStakingSecretKeys =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/AddStakingSecretKeys',
      request,
      metadata || {},
      methodDescriptor_PrivateService_AddStakingSecretKeys,
      callback);
};


/**
 * @param {!proto.massa.api.v1.AddStakingSecretKeysRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.AddStakingSecretKeysResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.addStakingSecretKeys =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/AddStakingSecretKeys',
      request,
      metadata || {},
      methodDescriptor_PrivateService_AddStakingSecretKeys);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.AllowEveryoneToBootstrapRequest,
 *   !proto.massa.api.v1.AllowEveryoneToBootstrapResponse>}
 */
const methodDescriptor_PrivateService_AllowEveryoneToBootstrap = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/AllowEveryoneToBootstrap',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.AllowEveryoneToBootstrapRequest,
  proto.massa.api.v1.AllowEveryoneToBootstrapResponse,
  /**
   * @param {!proto.massa.api.v1.AllowEveryoneToBootstrapRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.AllowEveryoneToBootstrapResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.AllowEveryoneToBootstrapRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.AllowEveryoneToBootstrapResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.AllowEveryoneToBootstrapResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.allowEveryoneToBootstrap =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/AllowEveryoneToBootstrap',
      request,
      metadata || {},
      methodDescriptor_PrivateService_AllowEveryoneToBootstrap,
      callback);
};


/**
 * @param {!proto.massa.api.v1.AllowEveryoneToBootstrapRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.AllowEveryoneToBootstrapResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.allowEveryoneToBootstrap =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/AllowEveryoneToBootstrap',
      request,
      metadata || {},
      methodDescriptor_PrivateService_AllowEveryoneToBootstrap);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetBootstrapBlacklistRequest,
 *   !proto.massa.api.v1.GetBootstrapBlacklistResponse>}
 */
const methodDescriptor_PrivateService_GetBootstrapBlacklist = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/GetBootstrapBlacklist',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetBootstrapBlacklistRequest,
  proto.massa.api.v1.GetBootstrapBlacklistResponse,
  /**
   * @param {!proto.massa.api.v1.GetBootstrapBlacklistRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetBootstrapBlacklistResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetBootstrapBlacklistRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetBootstrapBlacklistResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetBootstrapBlacklistResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.getBootstrapBlacklist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/GetBootstrapBlacklist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_GetBootstrapBlacklist,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetBootstrapBlacklistRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetBootstrapBlacklistResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.getBootstrapBlacklist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/GetBootstrapBlacklist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_GetBootstrapBlacklist);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetBootstrapWhitelistRequest,
 *   !proto.massa.api.v1.GetBootstrapWhitelistResponse>}
 */
const methodDescriptor_PrivateService_GetBootstrapWhitelist = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/GetBootstrapWhitelist',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetBootstrapWhitelistRequest,
  proto.massa.api.v1.GetBootstrapWhitelistResponse,
  /**
   * @param {!proto.massa.api.v1.GetBootstrapWhitelistRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetBootstrapWhitelistResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetBootstrapWhitelistRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetBootstrapWhitelistResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetBootstrapWhitelistResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.getBootstrapWhitelist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/GetBootstrapWhitelist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_GetBootstrapWhitelist,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetBootstrapWhitelistRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetBootstrapWhitelistResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.getBootstrapWhitelist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/GetBootstrapWhitelist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_GetBootstrapWhitelist);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetMipStatusRequest,
 *   !proto.massa.api.v1.GetMipStatusResponse>}
 */
const methodDescriptor_PrivateService_GetMipStatus = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/GetMipStatus',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetMipStatusRequest,
  proto.massa.api.v1.GetMipStatusResponse,
  /**
   * @param {!proto.massa.api.v1.GetMipStatusRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetMipStatusResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetMipStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetMipStatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetMipStatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.getMipStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/GetMipStatus',
      request,
      metadata || {},
      methodDescriptor_PrivateService_GetMipStatus,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetMipStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetMipStatusResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.getMipStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/GetMipStatus',
      request,
      metadata || {},
      methodDescriptor_PrivateService_GetMipStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetNodeStatusRequest,
 *   !proto.massa.api.v1.GetNodeStatusResponse>}
 */
const methodDescriptor_PrivateService_GetNodeStatus = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/GetNodeStatus',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetNodeStatusRequest,
  proto.massa.api.v1.GetNodeStatusResponse,
  /**
   * @param {!proto.massa.api.v1.GetNodeStatusRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetNodeStatusResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetNodeStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetNodeStatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetNodeStatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.getNodeStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/GetNodeStatus',
      request,
      metadata || {},
      methodDescriptor_PrivateService_GetNodeStatus,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetNodeStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetNodeStatusResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.getNodeStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/GetNodeStatus',
      request,
      metadata || {},
      methodDescriptor_PrivateService_GetNodeStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetPeersWhitelistRequest,
 *   !proto.massa.api.v1.GetPeersWhitelistResponse>}
 */
const methodDescriptor_PrivateService_GetPeersWhitelist = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/GetPeersWhitelist',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetPeersWhitelistRequest,
  proto.massa.api.v1.GetPeersWhitelistResponse,
  /**
   * @param {!proto.massa.api.v1.GetPeersWhitelistRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetPeersWhitelistResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetPeersWhitelistRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetPeersWhitelistResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetPeersWhitelistResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.getPeersWhitelist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/GetPeersWhitelist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_GetPeersWhitelist,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetPeersWhitelistRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetPeersWhitelistResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.getPeersWhitelist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/GetPeersWhitelist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_GetPeersWhitelist);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.BanNodesByIdsRequest,
 *   !proto.massa.api.v1.BanNodesByIdsResponse>}
 */
const methodDescriptor_PrivateService_BanNodesByIds = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/BanNodesByIds',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.BanNodesByIdsRequest,
  proto.massa.api.v1.BanNodesByIdsResponse,
  /**
   * @param {!proto.massa.api.v1.BanNodesByIdsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.BanNodesByIdsResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.BanNodesByIdsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.BanNodesByIdsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.BanNodesByIdsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.banNodesByIds =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/BanNodesByIds',
      request,
      metadata || {},
      methodDescriptor_PrivateService_BanNodesByIds,
      callback);
};


/**
 * @param {!proto.massa.api.v1.BanNodesByIdsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.BanNodesByIdsResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.banNodesByIds =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/BanNodesByIds',
      request,
      metadata || {},
      methodDescriptor_PrivateService_BanNodesByIds);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.BanNodesByIpsRequest,
 *   !proto.massa.api.v1.BanNodesByIpsResponse>}
 */
const methodDescriptor_PrivateService_BanNodesByIps = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/BanNodesByIps',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.BanNodesByIpsRequest,
  proto.massa.api.v1.BanNodesByIpsResponse,
  /**
   * @param {!proto.massa.api.v1.BanNodesByIpsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.BanNodesByIpsResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.BanNodesByIpsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.BanNodesByIpsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.BanNodesByIpsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.banNodesByIps =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/BanNodesByIps',
      request,
      metadata || {},
      methodDescriptor_PrivateService_BanNodesByIps,
      callback);
};


/**
 * @param {!proto.massa.api.v1.BanNodesByIpsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.BanNodesByIpsResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.banNodesByIps =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/BanNodesByIps',
      request,
      metadata || {},
      methodDescriptor_PrivateService_BanNodesByIps);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.RemoveFromBootstrapBlacklistRequest,
 *   !proto.massa.api.v1.RemoveFromBootstrapBlacklistResponse>}
 */
const methodDescriptor_PrivateService_RemoveFromBootstrapBlacklist = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/RemoveFromBootstrapBlacklist',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.RemoveFromBootstrapBlacklistRequest,
  proto.massa.api.v1.RemoveFromBootstrapBlacklistResponse,
  /**
   * @param {!proto.massa.api.v1.RemoveFromBootstrapBlacklistRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.RemoveFromBootstrapBlacklistResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.RemoveFromBootstrapBlacklistRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.RemoveFromBootstrapBlacklistResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.RemoveFromBootstrapBlacklistResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.removeFromBootstrapBlacklist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/RemoveFromBootstrapBlacklist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_RemoveFromBootstrapBlacklist,
      callback);
};


/**
 * @param {!proto.massa.api.v1.RemoveFromBootstrapBlacklistRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.RemoveFromBootstrapBlacklistResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.removeFromBootstrapBlacklist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/RemoveFromBootstrapBlacklist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_RemoveFromBootstrapBlacklist);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.RemoveFromBootstrapWhitelistRequest,
 *   !proto.massa.api.v1.RemoveFromBootstrapWhitelistResponse>}
 */
const methodDescriptor_PrivateService_RemoveFromBootstrapWhitelist = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/RemoveFromBootstrapWhitelist',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.RemoveFromBootstrapWhitelistRequest,
  proto.massa.api.v1.RemoveFromBootstrapWhitelistResponse,
  /**
   * @param {!proto.massa.api.v1.RemoveFromBootstrapWhitelistRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.RemoveFromBootstrapWhitelistResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.RemoveFromBootstrapWhitelistRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.RemoveFromBootstrapWhitelistResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.RemoveFromBootstrapWhitelistResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.removeFromBootstrapWhitelist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/RemoveFromBootstrapWhitelist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_RemoveFromBootstrapWhitelist,
      callback);
};


/**
 * @param {!proto.massa.api.v1.RemoveFromBootstrapWhitelistRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.RemoveFromBootstrapWhitelistResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.removeFromBootstrapWhitelist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/RemoveFromBootstrapWhitelist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_RemoveFromBootstrapWhitelist);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.RemoveFromPeersWhitelistRequest,
 *   !proto.massa.api.v1.RemoveFromPeersWhitelistResponse>}
 */
const methodDescriptor_PrivateService_RemoveFromPeersWhitelist = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/RemoveFromPeersWhitelist',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.RemoveFromPeersWhitelistRequest,
  proto.massa.api.v1.RemoveFromPeersWhitelistResponse,
  /**
   * @param {!proto.massa.api.v1.RemoveFromPeersWhitelistRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.RemoveFromPeersWhitelistResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.RemoveFromPeersWhitelistRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.RemoveFromPeersWhitelistResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.RemoveFromPeersWhitelistResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.removeFromPeersWhitelist =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/RemoveFromPeersWhitelist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_RemoveFromPeersWhitelist,
      callback);
};


/**
 * @param {!proto.massa.api.v1.RemoveFromPeersWhitelistRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.RemoveFromPeersWhitelistResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.removeFromPeersWhitelist =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/RemoveFromPeersWhitelist',
      request,
      metadata || {},
      methodDescriptor_PrivateService_RemoveFromPeersWhitelist);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.RemoveStakingAddressesRequest,
 *   !proto.massa.api.v1.RemoveStakingAddressesResponse>}
 */
const methodDescriptor_PrivateService_RemoveStakingAddresses = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/RemoveStakingAddresses',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.RemoveStakingAddressesRequest,
  proto.massa.api.v1.RemoveStakingAddressesResponse,
  /**
   * @param {!proto.massa.api.v1.RemoveStakingAddressesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.RemoveStakingAddressesResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.RemoveStakingAddressesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.RemoveStakingAddressesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.RemoveStakingAddressesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.removeStakingAddresses =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/RemoveStakingAddresses',
      request,
      metadata || {},
      methodDescriptor_PrivateService_RemoveStakingAddresses,
      callback);
};


/**
 * @param {!proto.massa.api.v1.RemoveStakingAddressesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.RemoveStakingAddressesResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.removeStakingAddresses =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/RemoveStakingAddresses',
      request,
      metadata || {},
      methodDescriptor_PrivateService_RemoveStakingAddresses);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.SignMessagesRequest,
 *   !proto.massa.api.v1.SignMessagesResponse>}
 */
const methodDescriptor_PrivateService_SignMessages = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/SignMessages',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.SignMessagesRequest,
  proto.massa.api.v1.SignMessagesResponse,
  /**
   * @param {!proto.massa.api.v1.SignMessagesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.SignMessagesResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.SignMessagesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.SignMessagesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.SignMessagesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.signMessages =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/SignMessages',
      request,
      metadata || {},
      methodDescriptor_PrivateService_SignMessages,
      callback);
};


/**
 * @param {!proto.massa.api.v1.SignMessagesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.SignMessagesResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.signMessages =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/SignMessages',
      request,
      metadata || {},
      methodDescriptor_PrivateService_SignMessages);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.ShutdownGracefullyRequest,
 *   !proto.massa.api.v1.ShutdownGracefullyResponse>}
 */
const methodDescriptor_PrivateService_ShutdownGracefully = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/ShutdownGracefully',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.ShutdownGracefullyRequest,
  proto.massa.api.v1.ShutdownGracefullyResponse,
  /**
   * @param {!proto.massa.api.v1.ShutdownGracefullyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.ShutdownGracefullyResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.ShutdownGracefullyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.ShutdownGracefullyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.ShutdownGracefullyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.shutdownGracefully =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/ShutdownGracefully',
      request,
      metadata || {},
      methodDescriptor_PrivateService_ShutdownGracefully,
      callback);
};


/**
 * @param {!proto.massa.api.v1.ShutdownGracefullyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.ShutdownGracefullyResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.shutdownGracefully =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/ShutdownGracefully',
      request,
      metadata || {},
      methodDescriptor_PrivateService_ShutdownGracefully);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.UnbanNodesByIdsRequest,
 *   !proto.massa.api.v1.UnbanNodesByIdsResponse>}
 */
const methodDescriptor_PrivateService_UnbanNodesByIds = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/UnbanNodesByIds',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.UnbanNodesByIdsRequest,
  proto.massa.api.v1.UnbanNodesByIdsResponse,
  /**
   * @param {!proto.massa.api.v1.UnbanNodesByIdsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.UnbanNodesByIdsResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.UnbanNodesByIdsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.UnbanNodesByIdsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.UnbanNodesByIdsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.unbanNodesByIds =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/UnbanNodesByIds',
      request,
      metadata || {},
      methodDescriptor_PrivateService_UnbanNodesByIds,
      callback);
};


/**
 * @param {!proto.massa.api.v1.UnbanNodesByIdsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.UnbanNodesByIdsResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.unbanNodesByIds =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/UnbanNodesByIds',
      request,
      metadata || {},
      methodDescriptor_PrivateService_UnbanNodesByIds);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.UnbanNodesByIpsRequest,
 *   !proto.massa.api.v1.UnbanNodesByIpsResponse>}
 */
const methodDescriptor_PrivateService_UnbanNodesByIps = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PrivateService/UnbanNodesByIps',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.UnbanNodesByIpsRequest,
  proto.massa.api.v1.UnbanNodesByIpsResponse,
  /**
   * @param {!proto.massa.api.v1.UnbanNodesByIpsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.UnbanNodesByIpsResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.UnbanNodesByIpsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.UnbanNodesByIpsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.UnbanNodesByIpsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PrivateServiceClient.prototype.unbanNodesByIps =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PrivateService/UnbanNodesByIps',
      request,
      metadata || {},
      methodDescriptor_PrivateService_UnbanNodesByIps,
      callback);
};


/**
 * @param {!proto.massa.api.v1.UnbanNodesByIpsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.UnbanNodesByIpsResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PrivateServicePromiseClient.prototype.unbanNodesByIps =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PrivateService/UnbanNodesByIps',
      request,
      metadata || {},
      methodDescriptor_PrivateService_UnbanNodesByIps);
};


module.exports = proto.massa.api.v1;

