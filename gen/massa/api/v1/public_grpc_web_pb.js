/**
 * @fileoverview gRPC-Web generated client stub for massa.api.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.23.3
// source: massa/api/v1/public.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_api_annotations_pb = require('../../../google/api/annotations_pb.js')

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js')

var massa_model_v1_address_pb = require('../../../massa/model/v1/address_pb.js')

var massa_model_v1_amount_pb = require('../../../massa/model/v1/amount_pb.js')

var massa_model_v1_block_pb = require('../../../massa/model/v1/block_pb.js')

var massa_model_v1_commons_pb = require('../../../massa/model/v1/commons_pb.js')

var massa_model_v1_datastore_pb = require('../../../massa/model/v1/datastore_pb.js')

var massa_model_v1_denunciation_pb = require('../../../massa/model/v1/denunciation_pb.js')

var massa_model_v1_draw_pb = require('../../../massa/model/v1/draw_pb.js')

var massa_model_v1_endorsement_pb = require('../../../massa/model/v1/endorsement_pb.js')

var massa_model_v1_execution_pb = require('../../../massa/model/v1/execution_pb.js')

var massa_model_v1_node_pb = require('../../../massa/model/v1/node_pb.js')

var massa_model_v1_operation_pb = require('../../../massa/model/v1/operation_pb.js')

var massa_model_v1_slot_pb = require('../../../massa/model/v1/slot_pb.js')

var massa_model_v1_staker_pb = require('../../../massa/model/v1/staker_pb.js')
const proto = {};
proto.massa = {};
proto.massa.api = {};
proto.massa.api.v1 = require('./public_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.massa.api.v1.PublicServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.massa.api.v1.PublicServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.ExecuteReadOnlyCallRequest,
 *   !proto.massa.api.v1.ExecuteReadOnlyCallResponse>}
 */
const methodDescriptor_PublicService_ExecuteReadOnlyCall = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/ExecuteReadOnlyCall',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.ExecuteReadOnlyCallRequest,
  proto.massa.api.v1.ExecuteReadOnlyCallResponse,
  /**
   * @param {!proto.massa.api.v1.ExecuteReadOnlyCallRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.ExecuteReadOnlyCallResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.ExecuteReadOnlyCallRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.ExecuteReadOnlyCallResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.ExecuteReadOnlyCallResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.executeReadOnlyCall =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/ExecuteReadOnlyCall',
      request,
      metadata || {},
      methodDescriptor_PublicService_ExecuteReadOnlyCall,
      callback);
};


/**
 * @param {!proto.massa.api.v1.ExecuteReadOnlyCallRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.ExecuteReadOnlyCallResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.executeReadOnlyCall =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/ExecuteReadOnlyCall',
      request,
      metadata || {},
      methodDescriptor_PublicService_ExecuteReadOnlyCall);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetBlocksRequest,
 *   !proto.massa.api.v1.GetBlocksResponse>}
 */
const methodDescriptor_PublicService_GetBlocks = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/GetBlocks',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetBlocksRequest,
  proto.massa.api.v1.GetBlocksResponse,
  /**
   * @param {!proto.massa.api.v1.GetBlocksRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetBlocksResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetBlocksRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetBlocksResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetBlocksResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.getBlocks =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetBlocks',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetBlocks,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetBlocksRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetBlocksResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.getBlocks =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetBlocks',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetBlocks);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetDatastoreEntriesRequest,
 *   !proto.massa.api.v1.GetDatastoreEntriesResponse>}
 */
const methodDescriptor_PublicService_GetDatastoreEntries = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/GetDatastoreEntries',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetDatastoreEntriesRequest,
  proto.massa.api.v1.GetDatastoreEntriesResponse,
  /**
   * @param {!proto.massa.api.v1.GetDatastoreEntriesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetDatastoreEntriesResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetDatastoreEntriesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetDatastoreEntriesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetDatastoreEntriesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.getDatastoreEntries =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetDatastoreEntries',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetDatastoreEntries,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetDatastoreEntriesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetDatastoreEntriesResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.getDatastoreEntries =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetDatastoreEntries',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetDatastoreEntries);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetEndorsementsRequest,
 *   !proto.massa.api.v1.GetEndorsementsResponse>}
 */
const methodDescriptor_PublicService_GetEndorsements = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/GetEndorsements',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetEndorsementsRequest,
  proto.massa.api.v1.GetEndorsementsResponse,
  /**
   * @param {!proto.massa.api.v1.GetEndorsementsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetEndorsementsResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetEndorsementsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetEndorsementsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetEndorsementsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.getEndorsements =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetEndorsements',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetEndorsements,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetEndorsementsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetEndorsementsResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.getEndorsements =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetEndorsements',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetEndorsements);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetNextBlockBestParentsRequest,
 *   !proto.massa.api.v1.GetNextBlockBestParentsResponse>}
 */
const methodDescriptor_PublicService_GetNextBlockBestParents = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/GetNextBlockBestParents',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetNextBlockBestParentsRequest,
  proto.massa.api.v1.GetNextBlockBestParentsResponse,
  /**
   * @param {!proto.massa.api.v1.GetNextBlockBestParentsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetNextBlockBestParentsResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetNextBlockBestParentsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetNextBlockBestParentsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetNextBlockBestParentsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.getNextBlockBestParents =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetNextBlockBestParents',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetNextBlockBestParents,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetNextBlockBestParentsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetNextBlockBestParentsResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.getNextBlockBestParents =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetNextBlockBestParents',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetNextBlockBestParents);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetOperationsRequest,
 *   !proto.massa.api.v1.GetOperationsResponse>}
 */
const methodDescriptor_PublicService_GetOperations = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/GetOperations',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetOperationsRequest,
  proto.massa.api.v1.GetOperationsResponse,
  /**
   * @param {!proto.massa.api.v1.GetOperationsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetOperationsResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetOperationsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetOperationsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetOperationsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.getOperations =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetOperations',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetOperations,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetOperationsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetOperationsResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.getOperations =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetOperations',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetOperations);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetScExecutionEventsRequest,
 *   !proto.massa.api.v1.GetScExecutionEventsResponse>}
 */
const methodDescriptor_PublicService_GetScExecutionEvents = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/GetScExecutionEvents',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetScExecutionEventsRequest,
  proto.massa.api.v1.GetScExecutionEventsResponse,
  /**
   * @param {!proto.massa.api.v1.GetScExecutionEventsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetScExecutionEventsResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetScExecutionEventsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetScExecutionEventsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetScExecutionEventsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.getScExecutionEvents =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetScExecutionEvents',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetScExecutionEvents,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetScExecutionEventsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetScExecutionEventsResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.getScExecutionEvents =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetScExecutionEvents',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetScExecutionEvents);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetSelectorDrawsRequest,
 *   !proto.massa.api.v1.GetSelectorDrawsResponse>}
 */
const methodDescriptor_PublicService_GetSelectorDraws = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/GetSelectorDraws',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetSelectorDrawsRequest,
  proto.massa.api.v1.GetSelectorDrawsResponse,
  /**
   * @param {!proto.massa.api.v1.GetSelectorDrawsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetSelectorDrawsResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetSelectorDrawsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetSelectorDrawsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetSelectorDrawsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.getSelectorDraws =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetSelectorDraws',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetSelectorDraws,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetSelectorDrawsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetSelectorDrawsResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.getSelectorDraws =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetSelectorDraws',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetSelectorDraws);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetStakersRequest,
 *   !proto.massa.api.v1.GetStakersResponse>}
 */
const methodDescriptor_PublicService_GetStakers = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/GetStakers',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetStakersRequest,
  proto.massa.api.v1.GetStakersResponse,
  /**
   * @param {!proto.massa.api.v1.GetStakersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetStakersResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetStakersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetStakersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetStakersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.getStakers =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetStakers',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetStakers,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetStakersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetStakersResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.getStakers =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetStakers',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetStakers);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetStatusRequest,
 *   !proto.massa.api.v1.GetStatusResponse>}
 */
const methodDescriptor_PublicService_GetStatus = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/GetStatus',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetStatusRequest,
  proto.massa.api.v1.GetStatusResponse,
  /**
   * @param {!proto.massa.api.v1.GetStatusRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetStatusResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetStatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetStatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.getStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetStatus',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetStatus,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetStatusResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.getStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetStatus',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.GetTransactionsThroughputRequest,
 *   !proto.massa.api.v1.GetTransactionsThroughputResponse>}
 */
const methodDescriptor_PublicService_GetTransactionsThroughput = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/GetTransactionsThroughput',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.GetTransactionsThroughputRequest,
  proto.massa.api.v1.GetTransactionsThroughputResponse,
  /**
   * @param {!proto.massa.api.v1.GetTransactionsThroughputRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.GetTransactionsThroughputResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.GetTransactionsThroughputRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.GetTransactionsThroughputResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.GetTransactionsThroughputResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.getTransactionsThroughput =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetTransactionsThroughput',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetTransactionsThroughput,
      callback);
};


/**
 * @param {!proto.massa.api.v1.GetTransactionsThroughputRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.GetTransactionsThroughputResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.getTransactionsThroughput =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/GetTransactionsThroughput',
      request,
      metadata || {},
      methodDescriptor_PublicService_GetTransactionsThroughput);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.QueryStateRequest,
 *   !proto.massa.api.v1.QueryStateResponse>}
 */
const methodDescriptor_PublicService_QueryState = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/QueryState',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.QueryStateRequest,
  proto.massa.api.v1.QueryStateResponse,
  /**
   * @param {!proto.massa.api.v1.QueryStateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.QueryStateResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.QueryStateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.QueryStateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.QueryStateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.queryState =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/QueryState',
      request,
      metadata || {},
      methodDescriptor_PublicService_QueryState,
      callback);
};


/**
 * @param {!proto.massa.api.v1.QueryStateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.QueryStateResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.queryState =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/QueryState',
      request,
      metadata || {},
      methodDescriptor_PublicService_QueryState);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.SearchBlocksRequest,
 *   !proto.massa.api.v1.SearchBlocksResponse>}
 */
const methodDescriptor_PublicService_SearchBlocks = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/SearchBlocks',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.SearchBlocksRequest,
  proto.massa.api.v1.SearchBlocksResponse,
  /**
   * @param {!proto.massa.api.v1.SearchBlocksRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.SearchBlocksResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.SearchBlocksRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.SearchBlocksResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.SearchBlocksResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.searchBlocks =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/SearchBlocks',
      request,
      metadata || {},
      methodDescriptor_PublicService_SearchBlocks,
      callback);
};


/**
 * @param {!proto.massa.api.v1.SearchBlocksRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.SearchBlocksResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.searchBlocks =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/SearchBlocks',
      request,
      metadata || {},
      methodDescriptor_PublicService_SearchBlocks);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.SearchEndorsementsRequest,
 *   !proto.massa.api.v1.SearchEndorsementsResponse>}
 */
const methodDescriptor_PublicService_SearchEndorsements = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/SearchEndorsements',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.SearchEndorsementsRequest,
  proto.massa.api.v1.SearchEndorsementsResponse,
  /**
   * @param {!proto.massa.api.v1.SearchEndorsementsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.SearchEndorsementsResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.SearchEndorsementsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.SearchEndorsementsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.SearchEndorsementsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.searchEndorsements =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/SearchEndorsements',
      request,
      metadata || {},
      methodDescriptor_PublicService_SearchEndorsements,
      callback);
};


/**
 * @param {!proto.massa.api.v1.SearchEndorsementsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.SearchEndorsementsResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.searchEndorsements =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/SearchEndorsements',
      request,
      metadata || {},
      methodDescriptor_PublicService_SearchEndorsements);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.massa.api.v1.SearchOperationsRequest,
 *   !proto.massa.api.v1.SearchOperationsResponse>}
 */
const methodDescriptor_PublicService_SearchOperations = new grpc.web.MethodDescriptor(
  '/massa.api.v1.PublicService/SearchOperations',
  grpc.web.MethodType.UNARY,
  proto.massa.api.v1.SearchOperationsRequest,
  proto.massa.api.v1.SearchOperationsResponse,
  /**
   * @param {!proto.massa.api.v1.SearchOperationsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.massa.api.v1.SearchOperationsResponse.deserializeBinary
);


/**
 * @param {!proto.massa.api.v1.SearchOperationsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.massa.api.v1.SearchOperationsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.massa.api.v1.SearchOperationsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.massa.api.v1.PublicServiceClient.prototype.searchOperations =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/massa.api.v1.PublicService/SearchOperations',
      request,
      metadata || {},
      methodDescriptor_PublicService_SearchOperations,
      callback);
};


/**
 * @param {!proto.massa.api.v1.SearchOperationsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.massa.api.v1.SearchOperationsResponse>}
 *     Promise that resolves to the response
 */
proto.massa.api.v1.PublicServicePromiseClient.prototype.searchOperations =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/massa.api.v1.PublicService/SearchOperations',
      request,
      metadata || {},
      methodDescriptor_PublicService_SearchOperations);
};


module.exports = proto.massa.api.v1;

